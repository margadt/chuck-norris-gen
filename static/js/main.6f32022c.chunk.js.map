{"version":3,"sources":["cmps/RandomSearch.js","cmps/FreeSearch.js","cmps/FilterInput.js","cmps/FilterMode.js","cmps/Filter.js","assets/logo.svg","cmps/Logo.js","cmps/Header.js","cmps/JokeQuotePreview.js","cmps/JokePreview.js","cmps/JokeList.js","services/chuckNorrisService.js","views/App.js","index.js"],"names":["RandomSearch","categories","onChange","filterBy","useState","selectClass","setSelectClass","className","htmlFor","id","name","placeholder","type","value","e","target","category","disabled","map","FreeSearch","search","FilterInput","isRandom","btnClass","setBtnClass","useEffect","_","FilterMode","onToggle","onClick","Filter","onSubmit","Logo","src","logo","alt","Header","JokeQuotePreview","quote","jokeClass","JokePreview","joke","selectedJoke","onSelectJoke","trClass","setTrClass","date","Date","created_at","toLocaleString","year","month","day","hour","minute","colSpan","JokeList","jokes","sortedJokes","setSortedJokes","isAscending","setIsAscending","spanClass","setSpanClass","idSet","Set","copy","filter","has","add","diff","sort","a","b","localeCompare","length","i","BASE_URL","getCategories","fetch","res","json","console","log","chuckNorrisService","query","getRandomJoke","App","isRandomMode","setIsRandomMode","setFilterBy","setCategories","randomJoke","setRandomJoke","setJokes","setSelectedJoke","preventDefault","result","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f32022c.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst RandomSearch = ({ categories, onChange, filterBy }) => {\n    const [selectClass, setSelectClass] = useState('');\n\n    const onSelect = e => {\n        onChange(e);\n        const { target: { value } } = e;\n        setSelectClass(value !== '' ? 'selected' : '');\n    }\n\n    return <>\n        <div className=\"search-input\">\n            <label htmlFor=\"name\">Your name</label>\n            <input id=\"name\" name=\"name\" placeholder=\"e.g. Chuck Norris\" type=\"text\" onChange={onChange} value={filterBy?.name} />\n\n        </div>\n        <div className=\"search-input select\">\n            <label htmlFor=\"category\">Categories </label>\n\n            <select className={selectClass} id=\"category\" name=\"category\" onChange={onSelect} value={filterBy?.category}>\n                <option value=\"\" disabled>Pick a category</option>\n                <option value=\"\" disabled=\"disabled\">──────────</option>\n                {categories.map(category => {\n                    return <option key={category} value={category}>{category}</option>\n                })}\n            </select>\n\n        </div>\n\n    </>\n}\n\nexport default RandomSearch;","const FreeSearch = ({ onChange, filterBy }) => {\n    return <div className=\"search-input free\">\n        <label htmlFor=\"search\">Key word(s)</label>\n        <input name=\"search\" type=\"text\" onChange={onChange} placeholder=\"e.g. egg, break, Chuck Norris, dumb\" value={filterBy?.search}/>\n    </div>\n}\n\nexport default FreeSearch;","import RandomSearch from \"./RandomSearch\";\nimport FreeSearch from \"./FreeSearch\";\nimport { useEffect, useState } from \"react\";\n\nconst FilterInput = ({ isRandom, categories, onChange, filterBy }) => {\n    const [btnClass, setBtnClass] = useState('');\n    useEffect(_ => {\n\n        if (isRandom) {\n            if (filterBy.name) {\n                setBtnClass('active');\n                return;\n            }\n        } else {\n            if (filterBy.search) {\n                setBtnClass('active');\n                return;\n            }\n        }\n        setBtnClass('');\n    }, [isRandom, filterBy.name, filterBy.search])\n\n    return <div className=\"filter-input\">\n        {\n            isRandom ?\n                <RandomSearch categories={categories} onChange={onChange} filterBy={filterBy} /> :\n                <FreeSearch onChange={onChange} filterBy={filterBy} />\n        }\n        <button className={btnClass} type=\"submit\">GO!</button>\n\n    </div>\n\n\n}\n\nexport default FilterInput;","const FilterMode = ({ isRandom, onToggle }) => {\n    return <div className=\"filter-mode\" onClick={onToggle}>\n        <button type=\"button\" className={isRandom ? 'active' : ''}>Random</button>\n        <button type=\"button\" className={!isRandom ? 'active' : ''}>Search</button>\n    </div>\n}\n\nexport default FilterMode;","import FilterInput from \"./FilterInput\";\nimport FilterMode from \"./FilterMode\";\n\n\nconst Filter = ({ isRandom, onToggle, categories, onSubmit, onChange, filterBy }) => {\n    return <form onSubmit={onSubmit} className=\"filter-container\">\n        <FilterMode\n            isRandom={isRandom}\n            onToggle={onToggle} />\n        <FilterInput\n            filterBy={filterBy}\n            isRandom={isRandom}\n            categories={categories}\n            onChange={onChange} />\n    </form>\n}\n\nexport default Filter;","export default __webpack_public_path__ + \"static/media/logo.3f82865e.svg\";","import logo from \"../assets/logo.svg\";\n\nconst Logo = _ => {\n    return <div className=\"logo-container\">\n        <img src={logo} alt=\"logo\" />\n    </div>\n}\n\nexport default Logo;","import Logo from './Logo';\n\nconst Header = _ => {\n    return <header>\n        <Logo />\n    </header>\n}\n\nexport default Header;","const JokeQuotePreview = ({ quote, className }) => {\n    if (!quote) return '';\n    const jokeClass = className ? className : '';\n\n    return <article className={\"quote \" + jokeClass}>\n        <span>{quote}</span>\n    </article>\n}\n\nexport default JokeQuotePreview;","import { useEffect, useState } from \"react\";\nimport JokeQuotePreview from \"./JokeQuotePreview\";\n\nconst JokePreview = ({ joke, selectedJoke, onSelectJoke }) => {\n    const [trClass, setTrClass] = useState('');\n    useEffect(_ => {\n        if (joke.id === selectedJoke?.id) {\n            setTrClass('selected');\n            return;\n        }\n        setTrClass('');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedJoke])\n\n    const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    const date = new Date(joke.created_at).toLocaleString('en-US', options);\n    const onClick = _ => {\n        if (selectedJoke?.id === joke.id) {\n            onSelectJoke(null);\n            return;\n        }\n        onSelectJoke(joke);\n    }\n    return <>\n        <tr className={trClass} onClick={onClick}>\n            <td>{joke.id}</td>\n            <td className=\"capitalize\">{joke.categories}</td>\n            <td>{date}</td>\n        </tr>\n        {joke.id === selectedJoke?.id && <tr className=\"selected-quote\"><td colSpan=\"3\"><JokeQuotePreview className=\"selected\" quote={joke.value} /></td></tr>}\n    </>\n}\n\nexport default JokePreview;","import { useEffect, useState } from 'react';\nimport JokePreview from './JokePreview';\n\n\nconst JokeList = ({ jokes, selectedJoke, onSelectJoke }) => {\n    const [sortedJokes, setSortedJokes] = useState([]);\n    const [isAscending, setIsAscending] = useState(true);\n    const [spanClass, setSpanClass] = useState('');\n\n    useEffect(_ => {\n        const idSet = new Set();\n        const copy = jokes.filter(joke => {\n            if (idSet.has(joke.id)) return false;\n            idSet.add(joke.id);\n            return true;\n        });\n        const diff = isAscending ? 1 : -1;\n        copy.sort((a, b) => a.created_at.localeCompare(b.created_at) * diff);\n        setSortedJokes(copy);\n        setSpanClass(isAscending ? '' : 'descending');\n    }, [jokes, isAscending]);\n\n\n\n    const onToggleSort = _ => {\n        setIsAscending(!isAscending);\n    }\n\n    if (!jokes.length) return '';\n\n    return <table>\n        <thead>\n            <tr>\n                <td>ID</td>\n                <td>Category</td>\n                <td onClick={onToggleSort}>Date Created <span className={\"arrow \" + spanClass}></span></td>\n            </tr>\n        </thead>\n        <tbody>\n            {sortedJokes.map((joke, i) => <JokePreview key={joke.id + i} joke={joke} selectedJoke={selectedJoke} onSelectJoke={onSelectJoke} />)}\n        </tbody>\n    </table>\n}\n\nexport default JokeList;","const BASE_URL = 'https://api.chucknorris.io/jokes';\n\nconst getCategories = async _ => {\n    try{\n        const res = await fetch(`${BASE_URL}/categories`);\n         return await res.json();\n    }catch (err){\n        console.log(err)\n    }\n}\n\nconst query = async filterBy => {\n    try {\n        if (filterBy.search.length > 1) {\n            const res = await fetch(`${BASE_URL}/search?query=${filterBy.search}`);\n            return await res.json();\n        }\n        const query = `${filterBy.name ? 'name=' + filterBy.name + '&' : ''}${filterBy.category ? 'category=' + filterBy.category : ''}`\n        const res = await fetch(`${BASE_URL}/random?${query}`)\n        return await res.json();\n    } catch (err) {\n        console.log(err)\n    }\n\n}\n\nconst getRandomJoke = async filterBy => {\n    try {        \n        const query = `${filterBy.name ? 'name=' + filterBy.name + '&' : ''}${filterBy.category ? 'category=' + filterBy.category : ''}`\n        const res = await fetch(`${BASE_URL}/random?${query}`)\n        return await res.json();\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nconst chuckNorrisService = {\n    query,\n    getRandomJoke,\n    getCategories\n}\n\nexport default chuckNorrisService;","import { useEffect, useState } from 'react';\nimport Filter from '../cmps/Filter';\nimport Header from '../cmps/Header';\nimport JokeList from '../cmps/JokeList';\nimport JokeQuotePreview from '../cmps/JokeQuotePreview';\nimport chuckNorrisService from '../services/chuckNorrisService';\nimport '../styles/global.scss';\n\nfunction App() {\n  const [isRandomMode, setIsRandomMode] = useState(true);\n  const [filterBy, setFilterBy] = useState({ name: '', search: '', category: '' });\n  const [categories, setCategories] = useState([]);\n  const [randomJoke, setRandomJoke] = useState('');\n  const [jokes, setJokes] = useState([]);\n  const [selectedJoke, setSelectedJoke] = useState(null);\n\n  useEffect(_ => {\n    (async _ => {\n      const res = await chuckNorrisService.getCategories();\n      setCategories(res);\n    })();\n  }, []);\n\n  const handleInput = ({ target: { name, value } }) => {\n    setFilterBy({\n      ...filterBy,\n      [name]: value\n    });\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (isRandomMode) {\n      const res = await chuckNorrisService.getRandomJoke(filterBy);\n      setRandomJoke(res.value);\n      return;\n    }\n    let res = await chuckNorrisService.query(filterBy);\n    if (res?.result?.length) {\n      if (res.result.length > 100) res.result = res.result.slice(0, 101);\n      setJokes([\n        ...jokes,\n        ...res.result\n      ]);\n      setFilterBy({\n        ...filterBy,\n        search: ''\n      });\n    }\n  }\n\n  const toggleRandomMode = _ => {\n    setIsRandomMode(!isRandomMode);\n  }\n\n  const onSelectJoke = joke => {\n    setSelectedJoke(joke);\n  }\n\n  return <main>\n    <Header />\n    <Filter\n      filterBy={filterBy}\n      isRandom={isRandomMode}\n      onToggle={toggleRandomMode}\n      onSubmit={onSubmit}\n      categories={categories}\n      onChange={handleInput} />\n    <section className=\"content\">\n      {isRandomMode ?\n        <JokeQuotePreview quote={randomJoke} /> :\n        <JokeList jokes={jokes} selectedJoke={selectedJoke} onSelectJoke={onSelectJoke} />}\n    </section>\n\n\n  </main>\n}\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}